# Kanban Board Module UI
kanbanBoardUI <- function(id) {
  ns <- NS(id)
  fluidRow(
    column(4, uiOutput(ns("todoColumn"))),
    column(4, uiOutput(ns("inProgressColumn"))),
    column(4, uiOutput(ns("doneColumn")))
  )
}

kanbanBoardServer <- function(input, output, session, tasks) {
  ns <- session$ns
  
  normalize_status <- function(status) {
    status <- tolower(trimws(status))
    dplyr::case_when(
      status %in% c("to do", "todo", "not started") ~ "To Do",
      status %in% c("in progress", "started", "ongoing", "working") ~ "In Progress",
      status %in% c("done", "completed", "finished", "complete") ~ "Done",
      TRUE ~ "To Do"
    )
  }
  
  renderTaskColumn <- function(status) {
    data <- tasks()
    if (nrow(data) == 0) return(h4("No tasks available."))
    
    data$Status <- normalize_status(data$Status)
    filtered <- data[!is.na(data$Status) & data$Status == status, ]
    
    if (nrow(filtered) == 0) return(h4(paste("No tasks in", status, "column.")))
    
    tagList(lapply(seq_len(nrow(filtered)), function(i) {
      task <- filtered[i, ]
      
      task_name <- ifelse(!is.na(task$Primary) && task$Primary != "", task$Primary, "Unnamed Task")
      project_title <- ifelse(!is.na(task$`short name`), task$`short name`, "Untitled Project")
      project_phase <- ifelse(!is.na(task$`Active Phase`), task$`Active Phase`, "Not specified")
      assignee <- ifelse(!is.na(task$`Assigned To`), task$`Assigned To`, "Unassigned")
      wave <- ifelse(!is.na(task$Wave), task$Wave, "Not specified")
      risk_level <- ifelse(!is.na(task$Health), task$Health, "Unknown")
      tier <- ifelse(!is.na(task$tier), task$tier, "Not specified")
      start_date <- ifelse(!is.na(task$`Start Date`) && task$`Start Date` != "", task$`Start Date`, NA)
      
      progress <- ifelse(!is.na(task$`% Complete`), task$`% Complete`, 0)
      progress_pct <- paste0(round(progress * 100), "%")
      
      # Schedule health
      schedule_health <- if (is.na(start_date)) {
        "Unknown"
      } else {
        days <- as.numeric(difftime(as.Date(start_date), Sys.Date(), units = "days"))
        if (is.na(days)) {
          "Unknown"
        } else if (days >= 7) {
          "On Track"
        } else if (days >= 0) {
          "At Risk"
        } else {
          "Overdue"
        }
      }
      
      # Dynamic color logic
      schedule_color <- switch(schedule_health,
                               "On Track" = "green",
                               "At Risk" = "orange",
                               "Overdue" = "red",
                               "Unknown" = "gray")
      
      risk_color <- switch(risk_level,
                           "Red" = "red",
                           "Amber" = "orange",
                           "Green" = "green",
                           "Gray" = "gray",
                           "black")
      
      bg_color <- switch(tier,
                         "Tier 1 - High Governance" = "#FFD6D6",
                         "Tier 2 - Medium Governance" = "#FFE7C9",
                         "Tier 3 - Low Governance" = "#D6FFD6",
                         "#F5F5F5")
      
      div(
        class = "task-card",
        style = paste(
          "background-color:", bg_color, ";",
          "padding: 15px; margin-bottom: 15px; border-radius: 8px;",
          "box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);"
        ),
        h4(paste(project_title, "-", project_phase), style = "margin-bottom: 10px; font-weight: bold;"),
        h5(task_name, style = "margin-bottom: 10px; font-weight: bold;"),
        p(paste("Assignee:", assignee), style = "margin: 5px 0;"),
        p(paste("Wave:", wave), style = "margin: 5px 0;"),
        div(
          class = "badge",
          style = paste(
            "display: inline-block; padding: 5px 10px; border-radius: 8px; margin-bottom: 5px;",
            "background-color:", risk_color, "; color: white; font-weight: bold;"
          ),
          paste("Health:", risk_level)
        ),
        div(
          class = "badge",
          style = paste(
            "display: inline-block; padding: 5px 10px; border-radius: 8px; margin-bottom: 10px;",
            "background-color:", schedule_color, "; color: white; font-weight: bold;"
          ),
          paste("Schedule:", schedule_health)
        ),
        div(
          class = "progress",
          style = "height: 15px; background-color: #f5f5f5; border-radius: 5px; overflow: hidden; margin-bottom: 5px;",
          div(
            class = "progress-bar",
            style = paste0("width:", progress_pct, "; background-color: #007bff; height: 100%;")
          )
        ),
        p(paste("Progress:", progress_pct), style = "font-size: 12px; color: #666;")
      )
    }))
  }
  
  output$todoColumn <- renderUI({
    renderTaskColumn("To Do")
  })
  
  output$inProgressColumn <- renderUI({
    renderTaskColumn("In Progress")
  })
  
  output$doneColumn <- renderUI({
    renderTaskColumn("Done")
  })
}
